program {
    PasarPalabraActualAMinúsculas()   
}

procedure PasarPalabraActualAMinúsculas() {
    /*
        PROPÓSITO: Pasa la palabra actual a minúscula según la codificación ASCII
        PRECONDICIÓN:   Hay al menos la cantidad de celdas al Este, 
                        donde cantidad es la longitud de la palábra 
                        (la longitud se obtiene de la cantidad de bolitas rojas de la celda actual)
    */    
    repeat(nroBolitas(Rojo)) {
        Mover(Este) //PosicionarseParaSiguienteLetra()
        PasarLetraAMinúscula(nroBolitas(Negro))
    }
    RegresarAlInicio(nroBolitas(Rojo))
}

procedure PasarLetraAMinúscula(letraMayúscula) {
    /*
        PROPÓSITO: Pasa a minúscula la letra dada por "letraMayúscula"
        PRECONDICIÓN: Hay al menos una celda al Norte y una al Sur de la actual
        PARÁMETROS: letraMayúscula es un número que representa la letra en mayúscula
        OBSERVACIÓN: una letra se representa con un número. Para pasaar de mayúscula a minúscula se usa la codificación ASCII (se suma 32 al valor)
    */
    Mover(Norte)
    repeat (letraMayúscula + 32) {
        Poner(Negro)
    }
    Mover(Sur)
}

procedure PosicionarseParaSiguienteLetra(){
    /*
        PROPÓSITO: Posiciona al cabezal en la letra siguiente al Este de la actual
        PRECONDICIÓN: hay al menos una celda al Este de la actual
    */    
    Mover(Este)
}

procedure RegresarAlInicio(cantidad){
    /*
        PROPÓSITO: Ubica al cabeza la cantidad de celdas dada por "cantidad", desplazandose hacia el Oeste
        PRECONDICIÓN: Hay al menos "cantidad" de celdas hacia el Este de la actual
        PARÁMETROS: cantidad es un número que indica la cantidad de celdas a desplazarse
    */    
    repeat(cantidad) { Mover(Oeste) }
}